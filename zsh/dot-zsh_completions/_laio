#compdef laio

autoload -U is-at-least

_laio() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_laio_commands" \
"*::: :->laio" \
&& ret=0
    case $state in
    (laio)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-command-$line[1]:"
        case $line[1] in
            (start)
_arguments "${_arguments_options[@]}" : \
'-f+[Specify the config file to use]:FILE:_default' \
'--file=[Specify the config file to use]:FILE:_default' \
'-m+[Specify the multiplexer to use. Note\: Zellij support is experimental!]:MUXER:(tmux zellij)' \
'--muxer=[Specify the multiplexer to use. Note\: Zellij support is experimental!]:MUXER:(tmux zellij)' \
'--config-dir=[]:CONFIG_DIR:_default' \
'-p[Show config picker]' \
'--show-picker[Show config picker]' \
'--skip-cmds[Skip the startup commands]' \
'--skip-attach[Skip attaching to session]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::name -- Name of the configuration:_default' \
&& ret=0
;;
(stop)
_arguments "${_arguments_options[@]}" : \
'-m+[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--muxer=[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--config-dir=[]:CONFIG_DIR:_default' \
'--skip-cmds[Skip the shutdown commands]' \
'-a[Stop all laio managed sessions]' \
'--all[Stop all laio managed sessions]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::name -- Name of the session to stop:_default' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
'-m+[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--muxer=[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(config)
_arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_laio__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-config-command-$line[1]:"
        case $line[1] in
            (create)
_arguments "${_arguments_options[@]}" : \
'-c+[Existing configuration to copy from]:COPY:_default' \
'--copy=[Existing configuration to copy from]:COPY:_default' \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::name -- Name of the new configuration. Omit to create local .laio.yaml:_default' \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':name -- Name of the configuration to edit:_default' \
&& ret=0
;;
(link)
_arguments "${_arguments_options[@]}" : \
'-f+[Specify the config file to use]:FILE:_default' \
'--file=[Specify the config file to use]:FILE:_default' \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':name -- Name of the symlink:_default' \
&& ret=0
;;
(validate)
_arguments "${_arguments_options[@]}" : \
'-f+[Specify the config file to use]:FILE:_default' \
'--file=[Specify the config file to use]:FILE:_default' \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::name -- Name of the configuration to validate, omit to validate local .laio.yaml:_default' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'-f[Force delete, no prompt]' \
'--force[Force delete, no prompt]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':name -- Name of the configuration to delete:_default' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_laio__config__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-config-help-command-$line[1]:"
        case $line[1] in
            (create)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(link)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(validate)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(session)
_arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_laio__session_commands" \
"*::: :->session" \
&& ret=0

    case $state in
    (session)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-session-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
'-m+[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--muxer=[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(yaml)
_arguments "${_arguments_options[@]}" : \
'-m+[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--muxer=[Specify the multiplexer to use]:MUXER:(tmux zellij)' \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_laio__session__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-session-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(yaml)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(completion)
_arguments "${_arguments_options[@]}" : \
'--config-dir=[]:CONFIG_DIR:_default' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':shell:(bash elvish fish powershell zsh nushell)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_laio__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-help-command-$line[1]:"
        case $line[1] in
            (start)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(stop)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(config)
_arguments "${_arguments_options[@]}" : \
":: :_laio__help__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-help-config-command-$line[1]:"
        case $line[1] in
            (create)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(link)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(validate)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(session)
_arguments "${_arguments_options[@]}" : \
":: :_laio__help__session_commands" \
"*::: :->session" \
&& ret=0

    case $state in
    (session)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:laio-help-session-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(yaml)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_laio_commands] )) ||
_laio_commands() {
    local commands; commands=(
'start:Start new session' \
'stop:Stop session' \
'list:List active (*) and available sessions' \
'config:Manage Configurations' \
'session:Manage Sessions' \
'completion:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'laio commands' commands "$@"
}
(( $+functions[_laio__completion_commands] )) ||
_laio__completion_commands() {
    local commands; commands=()
    _describe -t commands 'laio completion commands' commands "$@"
}
(( $+functions[_laio__config_commands] )) ||
_laio__config_commands() {
    local commands; commands=(
'create:Create new laio configuration' \
'edit:Edit laio configuration' \
'link:Symlink local laio configuration to the laio config directory' \
'validate:Validate laio configuration' \
'delete:Delete laio configuration' \
'list:List all laio configurations' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'laio config commands' commands "$@"
}
(( $+functions[_laio__config__create_commands] )) ||
_laio__config__create_commands() {
    local commands; commands=()
    _describe -t commands 'laio config create commands' commands "$@"
}
(( $+functions[_laio__config__delete_commands] )) ||
_laio__config__delete_commands() {
    local commands; commands=()
    _describe -t commands 'laio config delete commands' commands "$@"
}
(( $+functions[_laio__config__edit_commands] )) ||
_laio__config__edit_commands() {
    local commands; commands=()
    _describe -t commands 'laio config edit commands' commands "$@"
}
(( $+functions[_laio__config__help_commands] )) ||
_laio__config__help_commands() {
    local commands; commands=(
'create:Create new laio configuration' \
'edit:Edit laio configuration' \
'link:Symlink local laio configuration to the laio config directory' \
'validate:Validate laio configuration' \
'delete:Delete laio configuration' \
'list:List all laio configurations' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'laio config help commands' commands "$@"
}
(( $+functions[_laio__config__help__create_commands] )) ||
_laio__config__help__create_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help create commands' commands "$@"
}
(( $+functions[_laio__config__help__delete_commands] )) ||
_laio__config__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help delete commands' commands "$@"
}
(( $+functions[_laio__config__help__edit_commands] )) ||
_laio__config__help__edit_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help edit commands' commands "$@"
}
(( $+functions[_laio__config__help__help_commands] )) ||
_laio__config__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help help commands' commands "$@"
}
(( $+functions[_laio__config__help__link_commands] )) ||
_laio__config__help__link_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help link commands' commands "$@"
}
(( $+functions[_laio__config__help__list_commands] )) ||
_laio__config__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help list commands' commands "$@"
}
(( $+functions[_laio__config__help__validate_commands] )) ||
_laio__config__help__validate_commands() {
    local commands; commands=()
    _describe -t commands 'laio config help validate commands' commands "$@"
}
(( $+functions[_laio__config__link_commands] )) ||
_laio__config__link_commands() {
    local commands; commands=()
    _describe -t commands 'laio config link commands' commands "$@"
}
(( $+functions[_laio__config__list_commands] )) ||
_laio__config__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio config list commands' commands "$@"
}
(( $+functions[_laio__config__validate_commands] )) ||
_laio__config__validate_commands() {
    local commands; commands=()
    _describe -t commands 'laio config validate commands' commands "$@"
}
(( $+functions[_laio__help_commands] )) ||
_laio__help_commands() {
    local commands; commands=(
'start:Start new session' \
'stop:Stop session' \
'list:List active (*) and available sessions' \
'config:Manage Configurations' \
'session:Manage Sessions' \
'completion:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'laio help commands' commands "$@"
}
(( $+functions[_laio__help__completion_commands] )) ||
_laio__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'laio help completion commands' commands "$@"
}
(( $+functions[_laio__help__config_commands] )) ||
_laio__help__config_commands() {
    local commands; commands=(
'create:Create new laio configuration' \
'edit:Edit laio configuration' \
'link:Symlink local laio configuration to the laio config directory' \
'validate:Validate laio configuration' \
'delete:Delete laio configuration' \
'list:List all laio configurations' \
    )
    _describe -t commands 'laio help config commands' commands "$@"
}
(( $+functions[_laio__help__config__create_commands] )) ||
_laio__help__config__create_commands() {
    local commands; commands=()
    _describe -t commands 'laio help config create commands' commands "$@"
}
(( $+functions[_laio__help__config__delete_commands] )) ||
_laio__help__config__delete_commands() {
    local commands; commands=()
    _describe -t commands 'laio help config delete commands' commands "$@"
}
(( $+functions[_laio__help__config__edit_commands] )) ||
_laio__help__config__edit_commands() {
    local commands; commands=()
    _describe -t commands 'laio help config edit commands' commands "$@"
}
(( $+functions[_laio__help__config__link_commands] )) ||
_laio__help__config__link_commands() {
    local commands; commands=()
    _describe -t commands 'laio help config link commands' commands "$@"
}
(( $+functions[_laio__help__config__list_commands] )) ||
_laio__help__config__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio help config list commands' commands "$@"
}
(( $+functions[_laio__help__config__validate_commands] )) ||
_laio__help__config__validate_commands() {
    local commands; commands=()
    _describe -t commands 'laio help config validate commands' commands "$@"
}
(( $+functions[_laio__help__help_commands] )) ||
_laio__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'laio help help commands' commands "$@"
}
(( $+functions[_laio__help__list_commands] )) ||
_laio__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio help list commands' commands "$@"
}
(( $+functions[_laio__help__session_commands] )) ||
_laio__help__session_commands() {
    local commands; commands=(
'list:List all active sessions' \
'yaml:Shows current session layout as yaml' \
    )
    _describe -t commands 'laio help session commands' commands "$@"
}
(( $+functions[_laio__help__session__list_commands] )) ||
_laio__help__session__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio help session list commands' commands "$@"
}
(( $+functions[_laio__help__session__yaml_commands] )) ||
_laio__help__session__yaml_commands() {
    local commands; commands=()
    _describe -t commands 'laio help session yaml commands' commands "$@"
}
(( $+functions[_laio__help__start_commands] )) ||
_laio__help__start_commands() {
    local commands; commands=()
    _describe -t commands 'laio help start commands' commands "$@"
}
(( $+functions[_laio__help__stop_commands] )) ||
_laio__help__stop_commands() {
    local commands; commands=()
    _describe -t commands 'laio help stop commands' commands "$@"
}
(( $+functions[_laio__list_commands] )) ||
_laio__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio list commands' commands "$@"
}
(( $+functions[_laio__session_commands] )) ||
_laio__session_commands() {
    local commands; commands=(
'list:List all active sessions' \
'yaml:Shows current session layout as yaml' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'laio session commands' commands "$@"
}
(( $+functions[_laio__session__help_commands] )) ||
_laio__session__help_commands() {
    local commands; commands=(
'list:List all active sessions' \
'yaml:Shows current session layout as yaml' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'laio session help commands' commands "$@"
}
(( $+functions[_laio__session__help__help_commands] )) ||
_laio__session__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'laio session help help commands' commands "$@"
}
(( $+functions[_laio__session__help__list_commands] )) ||
_laio__session__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio session help list commands' commands "$@"
}
(( $+functions[_laio__session__help__yaml_commands] )) ||
_laio__session__help__yaml_commands() {
    local commands; commands=()
    _describe -t commands 'laio session help yaml commands' commands "$@"
}
(( $+functions[_laio__session__list_commands] )) ||
_laio__session__list_commands() {
    local commands; commands=()
    _describe -t commands 'laio session list commands' commands "$@"
}
(( $+functions[_laio__session__yaml_commands] )) ||
_laio__session__yaml_commands() {
    local commands; commands=()
    _describe -t commands 'laio session yaml commands' commands "$@"
}
(( $+functions[_laio__start_commands] )) ||
_laio__start_commands() {
    local commands; commands=()
    _describe -t commands 'laio start commands' commands "$@"
}
(( $+functions[_laio__stop_commands] )) ||
_laio__stop_commands() {
    local commands; commands=()
    _describe -t commands 'laio stop commands' commands "$@"
}

if [ "$funcstack[1]" = "_laio" ]; then
    _laio "$@"
else
    compdef _laio laio
fi
